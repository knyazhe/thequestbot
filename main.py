import json
import traceback
import sqlite3
from random import randint, choice
from bot.bot import Bot
from bot.handler import MessageHandler, BotButtonCommandHandler, StartCommandHandler

TOKEN = "TOKEN"
bot = Bot(token=TOKEN)

con = sqlite3.connect("database.db", check_same_thread=False)
cursor = con.cursor()

cursor.execute(
    "CREATE TABLE IF NOT EXISTS users (id TEXT, cash INTEGER, start BOOLEAN, eday BOOLEAN, ref TEXT, promo BOOLEAN, get_promo BOOLEAN, msg_count INTEGER, last INTEGER)")
con.commit()

symb = "0123456789abcdefghijklmnopqrstuvwxyz"

with open('live.txt', mode='r', encoding="utf_8") as f:
    text = f.read().splitlines()


def addCash(user_id, cash, start=False):
    cursor.execute("SELECT id FROM users WHERE id = ?", [user_id])
    result = cursor.fetchone()
    if result is None:
        if start:
            cursor.execute("INSERT INTO users VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
                           [user_id, cash, 1, 1, None, 0, 0, 0, 0])
            print(f"LOG: Create id: {user_id}, cash: {cash}")
        else:
            cursor.execute("INSERT INTO users VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)",
                           [user_id, cash, 0, 1, None, 0, 0, 0, 0])
            print(f"LOG: Create id: {user_id}, cash: {cash}")
    else:
        if start:
            cursor.execute("SELECT start FROM users WHERE id = ?", [user_id])
            result = cursor.fetchone()
            if not result[0]:
                cursor.execute(
                    "SELECT cash FROM users WHERE id = ?", [user_id])
                result = cursor.fetchone()
                cursor.execute("UPDATE users SET cash = ?, start = 1 WHERE id = ?",
                               [int(result[0]) + int(cash), user_id])
                print(f"LOG: Add id: {user_id}, cash: {result[0]} (+{cash})")
        else:
            cursor.execute("SELECT cash FROM users WHERE id = ?", [user_id])
            result = cursor.fetchone()
            cursor.execute("UPDATE users SET cash = ? WHERE id = ?", [
                int(result[0]) + int(cash), user_id])
            print(f"LOG: Add id: {user_id}, cash: {result[0]} (+{cash})")
    con.commit()


def sendEnd(ans, event):
    if "{" in text[ans]:
        bot.send_text(chat_id=event.data['from']['userId'],
                      text="–≠—Ç–æ –∫–æ–Ω–µ—Ü –∫–≤–µ—Å—Ç–∞.\n–ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –∑–∞–Ω–æ–≤–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É.",
                      inline_keyboard_markup="{}".format(json.dumps(
                          [[{"text": "üîÑ–ó–∞–Ω–æ–≤–æ", "callbackData": "repeat", "style": "primary"},
                            {"text": "üóÇÔ∏è–í –º–µ–Ω—é", "callbackData": "menu", "style": "primary"}]])))


def getRating(user_id):
    cursor.execute("SELECT * FROM users ORDER BY cash DESC LIMIT 10")
    result = cursor.fetchall()
    text = ""
    your = 10
    for i in range(len(result)):
        text += f"{i + 1}. @{result[i][0]} - {result[i][1]} –º–æ–Ω–µ—Ç\n"
        if result[i][0] == user_id:
            your = i
    text += f"\n–í—ã –Ω–∞ {your + 1} –º–µ—Å—Ç–µ."
    return text


def repl(ans):
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç
    per1 = False
    per2 = False
    per3 = False
    out = ""
    num = ""
    replic = ""
    buttons = []
    konc = ""
    numKonc = []
    nums = []
    counter = 0
    for i in text[int(ans)]:
        if i == "*" and not per2:
            out += "\n"
        elif i == "{":
            per3 = True
        elif i == "}":
            per3 = False
            numKonc.append(int(konc))
        elif i == "<":
            per1 = True
            out += "\n"
        elif i == ">":
            per1 = False
            per2 = True
        elif i == ";" and per2:
            per2 = False
            nums.append(int(num))
            buttons.append([{"text": f"{replic}", "callbackData": f"{int(num)}", "style": "primary"}])
            replic = ""
            num = ""
            counter = 0
        elif per1 is True:
            num += i
        elif per2 is True:
            counter += 1
            if counter >= 25 and i == " ":
                replic += "\n"
                counter = 0
            if i == "*":
                replic += "\n"
            else:
                replic += i
        elif per3 is True:
            konc += i
        else:
            out += i
    buttons.append([{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "nmenu", "style": "base"}])
    return out, str(json.dumps(buttons)), nums


def start_cb(bot, event):
    addCash(event.from_chat, 200, True)
    bot.send_text(chat_id=event.from_chat,
                  text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {event.data['from']['firstName']}!\n–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ üóÇÔ∏è –ú–µ–Ω—é",
                  inline_keyboard_markup="{}".format(json.dumps(
                      [[{"text": "üìö –ö–≤–µ—Å—Ç—ã", "callbackData": "quests", "style": "primary"}],
                       [{"text": "üìä –†–µ–π—Ç–∏–Ω–≥", "callbackData": "rate", "style": "primary"}],
                       [{"text": "üí∞ –ö–æ—à–µ–ª—ë–∫", "callbackData": "money", "style": "primary"},
                        {"text": "‚Ñπ Ô∏è–ò–Ω—Ñ–æ", "callbackData": "info", "style": "primary"}]])))


def isEnd(ans):
    x = False
    for i in text[ans]:
        if i == "{":
            x = True
    if x:
        return True
    else:
        return False


def answer_cb(bot, event):
    try:
        addCash(event.data['from']['userId'], 200, True)
        if str(event.type) == 'EventType.NEW_MESSAGE':
            print(event.data['from']['userId'], event.data['text'])
        else:
            print(event.data['from']['userId'], event.data['callbackData'])

        if str(event.type) == 'EventType.NEW_MESSAGE':
            cursor.execute("SELECT promo FROM users WHERE id = ?", [event.data['from']['userId']])
            promo = cursor.fetchone()[0]
            event.data['text'] = event.data['text'].lower()
            if promo:
                cursor.execute("SELECT ref FROM users WHERE ref = ?", [event.data['text'].lower()])
                ref = cursor.fetchone()
                cursor.execute("SELECT get_promo FROM users WHERE id = ?", [event.data['from']['userId']])
                get_promo = cursor.fetchone()[0]
                if get_promo:
                    bot.send_text(chat_id=event.data['from']['userId'],
                                  text="–í—ã —É–∂–µ –≤–≤–æ–¥–∏–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥",
                                  inline_keyboard_markup="{}".format(json.dumps(
                                      [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))
                    cursor.execute("UPDATE users SET promo = 0 WHERE id = ?", [event.data['from']['userId']])
                elif ref:
                    cursor.execute("SELECT ref FROM users WHERE id = ?", [event.data['from']['userId']])
                    self_ref = cursor.fetchone()[0]
                    if ref[0] == self_ref:
                        bot.send_text(chat_id=event.data['from']['userId'],
                                      text="–ù–µ —Å—Ç–æ–∏—Ç —Ö–∏—Ç—Ä–∏—Ç—å :)",
                                      inline_keyboard_markup="{}".format(json.dumps(
                                          [[{"text": "–ï—â—ë —Ä–∞–∑", "callbackData": "promo", "style": "primary"}],
                                           [{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))
                        cursor.execute("UPDATE users SET promo = 0 WHERE id = ?", [event.data['from']['userId']])

                    else:
                        cursor.execute("UPDATE users SET get_promo = 1 WHERE id = ?", [event.data['from']['userId']])
                        cursor.execute("SELECT cash FROM users WHERE ref = ?", [event.data['text']])
                        cash = cursor.fetchone()[0]
                        cursor.execute("UPDATE users SET promo = 0 WHERE id = ?", [event.data['from']['userId']])
                        cursor.execute("UPDATE users SET cash = ? WHERE ref = ?", [cash + 30, event.data['text']])
                        cursor.execute("SELECT cash FROM users WHERE id = ?", [event.data['from']['userId']])
                        cash = cursor.fetchone()[0]
                        cursor.execute("UPDATE users SET cash = ? WHERE id = ?",
                                       [cash + 30, event.data['from']['userId']])
                        bot.send_text(chat_id=event.data['from']['userId'],
                                      text="–¢–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –µ—Å—Ç—å! –í–∞–º –∑–∞—á–∏—Å–ª–µ–Ω–æ 30 –º–æ–Ω–µ—Ç",
                                      inline_keyboard_markup="{}".format(json.dumps(
                                          [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))
                else:
                    bot.send_text(chat_id=event.data['from']['userId'],
                                  text="–¢–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ—Ç :(",
                                  inline_keyboard_markup="{}".format(json.dumps(
                                      [[{"text": "–ï—â—ë —Ä–∞–∑", "callbackData": "promo", "style": "primary"}],
                                       [{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))
                    cursor.execute("UPDATE users SET promo = 0 WHERE id = ?", [event.data['from']['userId']])
            else:
                start_cb(bot, event)
            con.commit()
        else:
            bot.answer_callback_query(
                query_id=event.data['queryId'],
                text="")
            if event.data['callbackData'] == "quest":
                cursor.execute("SELECT last FROM users WHERE id = ?", [event.data['from']['userId']])
                last = cursor.fetchone()[0]
                bot.send_text(chat_id=event.data['from']['userId'],
                              text=repl(last)[0],
                              inline_keyboard_markup=repl(last)[1])

            elif event.data['callbackData'] == "repeat":
                bot.send_text(chat_id=event.data['from']['userId'],
                              text=repl(0)[0],
                              inline_keyboard_markup=repl(0)[1])
                cursor.execute("UPDATE users SET last = ? WHERE id = ?", [0, event.data['from']['userId']])

            elif event.data['callbackData'] == "bonus":
                cursor.execute("SELECT eday FROM users WHERE id =?", [event.data['from']['userId']])
                result = cursor.fetchone()
                if result[0]:
                    bmoney = randint(5, 10)
                    addCash(event.data['from']['userId'], bmoney, False)
                    bot.edit_text(chat_id=event.data['from']['userId'],
                                  msg_id=event.data['message']['msgId'],
                                  text=f"–í–∞—à –±–æ–Ω—É—Å: {bmoney}.\n–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞!",
                                  inline_keyboard_markup="{}".format(json.dumps(
                                      [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))
                    cursor.execute("UPDATE users SET eday = 0 WHERE id = ?", [
                        event.data['from']['userId']])
                else:
                    bot.edit_text(chat_id=event.data['from']['userId'],
                                  msg_id=event.data['message']['msgId'],
                                  text="–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞!",
                                  inline_keyboard_markup="{}".format(json.dumps(
                                      [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            elif event.data['callbackData'] == "rate":
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text=getRating(event.data['from']['userId']),
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            elif event.data['callbackData'] == "menu":
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {event.data['from']['firstName']}!\n–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ üóÇÔ∏è–ú–µ–Ω—é",
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "üìö –ö–≤–µ—Å—Ç—ã", "callbackData": "quests", "style": "primary"}],
                                   [{"text": "üìä –†–µ–π—Ç–∏–Ω–≥", "callbackData": "rate",
                                     "style": "primary"}],
                                   [{"text": "üí∞ –ö–æ—à–µ–ª—ë–∫", "callbackData": "money", "style": "primary"},
                                    {"text": "‚Ñπ Ô∏è–ò–Ω—Ñ–æ", "callbackData": "info", "style": "primary"}]])))

            elif event.data['callbackData'] == "nmenu":
                bot.send_text(chat_id=event.data['from']['userId'],
                              text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {event.data['from']['firstName']}!\n–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ üóÇÔ∏è–ú–µ–Ω—é",
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "üìö –ö–≤–µ—Å—Ç—ã", "callbackData": "quests", "style": "primary"}],
                                   [{"text": "üìä –†–µ–π—Ç–∏–Ω–≥", "callbackData": "rate",
                                     "style": "primary"}],
                                   [{"text": "üí∞ –ö–æ—à–µ–ª—ë–∫", "callbackData": "money", "style": "primary"},
                                    {"text": "‚Ñπ Ô∏è–ò–Ω—Ñ–æ", "callbackData": "info", "style": "primary"}]])))

            elif event.data['callbackData'] == "ref":
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text=f"–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –∑–∞ –Ω–∏—Ö –º–æ–Ω–µ—Ç—ã",
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "–ú–æ–π –∫–æ–¥", "callbackData": "get-ref", "style": "primary"},
                                    {"text": "–í–≤–µ—Å—Ç–∏ –∫–æ–¥", "callbackData": "promo", "style": "primary"}],
                                   [{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            elif event.data['callbackData'] == "get-ref":
                cursor.execute("SELECT ref FROM users WHERE id = ?", [event.data['from']['userId']])
                result = cursor.fetchone()
                if result[0] is None:
                    cursor.execute("SELECT ref FROM users")
                    result = cursor.fetchall()
                    code = ""
                    for i in range(4):
                        code += choice(symb)
                    while code in result:
                        code = ""
                        for i in range(4):
                            code += choice(symb)
                    cursor.execute("UPDATE users SET ref = ? WHERE id = ?", [code, event.data['from']['userId']])
                    bot.edit_text(chat_id=event.data['from']['userId'],
                                  msg_id=event.data['message']['msgId'],
                                  text=f"–í–∞—à –∫–æ–¥: {code}",
                                  inline_keyboard_markup="{}".format(json.dumps(
                                      [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

                else:
                    cursor.execute("SELECT ref FROM users WHERE id = ?", [event.data['from']['userId']])
                    code = cursor.fetchone()[0]
                    bot.edit_text(chat_id=event.data['from']['userId'],
                                  msg_id=event.data['message']['msgId'],
                                  text=f"–í–∞—à –∫–æ–¥: {code}",
                                  inline_keyboard_markup="{}".format(json.dumps(
                                      [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))
                con.commit()

            elif event.data['callbackData'] == "promo":
                cursor.execute("UPDATE users SET promo = 1 WHERE id = ?", [event.data['from']['userId']])
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text=f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.",
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))
                con.commit()

            elif event.data['callbackData'] == "quests":
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text=f"{event.data['from']['firstName']}, –≤—ã–±–∏—Ä–∞–π—Ç–µ —Ç–æ, —á—Ç–æ –¥—É—à–µ —É–≥–æ–¥–Ω–æ",
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "–ñ–∏–≤–æ–µ", "callbackData": "quest", "style": "primary"}],
                                   [{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            elif event.data['callbackData'] == "money":
                cursor.execute("SELECT cash FROM users WHERE id = ?", [event.data['from']['userId']])
                money = cursor.fetchone()[0]
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text=f"{event.data['from']['firstName']}, —ç—Ç–æ –í–∞—à –∫–æ—à–µ–ª—ë–∫.\n–í–∞—à –±–∞–ª–∞–Ω—Å: {money}",
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "üíº –†–µ—Ñ. —Å–∏—Å—Ç–µ–º–∞", "callbackData": "ref", "style": "base"},
                                    {"text": "üí∏ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å", "callbackData": "bonus", "style": "base"}],
                                   [{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            elif event.data['callbackData'] == "info":
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text="‚Ñπ Ô∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–∞—Ö –∏ –±–æ—Ç–µ",
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "ü§ñ –û –±–æ—Ç–µ", "callbackData": "aboutbot", "style": "base"},
                                    {"text": "üë• –û–± \n–∞–≤—Ç–æ—Ä–∞—Ö", "callbackData": "authors", "style": "base"}],
                                   [{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            elif event.data['callbackData'] == "authors":
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text='''–ê–≤—Ç–æ—Ä—ã:
            üë®‚Äçüíª –û–ª–µ–≥ - –ê–≤—Ç–æ—Ä –∏–¥–µ–∏; –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç.
            VK/ICQ: @oleg.json
                              
            üìù –ê–Ω–Ω–∞ - –ü–∏—Å–∞—Ç–µ–ª—å.
            Inst: anna_sulimova2004
            ICQ: @diagon_alley''',
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            elif event.data['callbackData'] == "aboutbot":
                bot.edit_text(chat_id=event.data['from']['userId'],
                              msg_id=event.data['message']['msgId'],
                              text="–î–∞–Ω–Ω—ã–π –±–æ—Ç –º–æ–∂–µ—Ç—å –ø–æ–≤–µ–¥–∞—Ç—å –í–∞–º –∏—Å—Ç–æ—Ä–∏–∏ —Å —Ç–æ–π –∫–æ–Ω—Ü–æ–≤–∫–æ–π, –∫ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Å–∞–º–∏ "
                                   "–ø—Ä–∏—à–ª–∏\n\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: thequestbot@gmail.com",
                              inline_keyboard_markup="{}".format(json.dumps(
                                  [[{"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            elif event.data['callbackData'] == "nalog":
                cursor.execute("SELECT cash FROM users WHERE id = ?", [event.data['from']['userId']])
                cash = int(cursor.fetchone()[0])
                if cash - 10 >= 0:
                    cursor.execute("UPDATE users SET cash = ? WHERE id = ?", [cash - 10, event.data['from']['userId']])
                    bot.send_text(chat_id=event.data['from']['userId'],
                                  text="‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
                    cursor.execute("UPDATE users SET msg_count = 0 WHERE id = ?", [event.data['from']['userId']])
                    cursor.execute("SELECT last FROM users WHERE id = ?", [event.data['from']['userId']])
                    last = cursor.fetchone()[0]
                    bot.send_text(chat_id=event.data['from']['userId'],
                                  text=repl(last)[0],
                                  inline_keyboard_markup=repl(last)[1])
                else:
                    if (cash - 10) * -1 < 5:
                        t = "–º–æ–Ω–µ—Ç—ã"
                    else:
                        t = "–º–æ–Ω–µ—Ç"
                    bot.send_text(chat_id=event.data['from']['userId'],
                                  text=f"‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç {(cash - 10) * -1} {t}.\n–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ üí∞–ö–æ—à–µ–ª—ë–∫",
                                  inline_keyboard_markup="{}".format(json.dumps(
                                      [[{"text": "üóÇÔ∏è–ú–µ–Ω—é", "callbackData": "menu", "style": "base"}]])))

            else:
                if not isEnd(int(event.data['callbackData'])):
                    if len(repl(int(event.data['callbackData']))[1]) > 4:
                        cursor.execute("SELECT msg_count FROM users WHERE id = ?", [event.data['from']['userId']])
                        count = cursor.fetchone()[0]
                        cursor.execute("SELECT last FROM users WHERE id = ?", [event.data['from']['userId']])
                        last = cursor.fetchone()[0]
                        if int(count) >= 5:
                            bot.send_text(chat_id=event.data['from']['userId'],
                                          text="–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å 10 –º–æ–Ω–µ—Ç",
                                          inline_keyboard_markup="{}".format(json.dumps(
                                              [[{"text": "üí∞ –ó–∞–ø–ª–∞—Ç–∏—Ç—å", "callbackData": "nalog", "style": "primary"},
                                                {"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "primary"}]])))
                        elif int(event.data['callbackData']) in repl(last)[2]:
                            cursor.execute("UPDATE users SET msg_count = ? WHERE id = ?",
                                           [int(count) + 1, event.data['from']['userId']])
                            bot.send_text(chat_id=event.data['from']['userId'],
                                          text=repl(int(event.data['callbackData']))[0],
                                          inline_keyboard_markup=repl(int(event.data['callbackData']))[1])
                            for i in event.data['message']['parts'][0]['payload']:
                                if i[0]['callbackData'] == event.data['callbackData']:
                                    replica = i[0]['text']
                            bot.edit_text(chat_id=event.data['from']['userId'],
                                          msg_id=event.data['message']['msgId'],
                                          text=repl(int(last))[0]+f"===== {replica} =====")
                            cursor.execute("UPDATE users SET last = ? WHERE id = ?",
                                           [int(event.data['callbackData']), event.data['from']['userId']])
                        else:
                            cursor.execute("SELECT last FROM users WHERE id = ?", [event.data['from']['userId']])
                            last = int(cursor.fetchone()[0])
                            bot.send_text(chat_id=event.data['from']['userId'],
                                          text="–ù–µ –∂—É–ª—å–Ω–∏—á–∞–π—Ç–µ! –ù–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
                            bot.send_text(chat_id=event.data['from']['userId'],
                                          text=repl(last)[0],
                                          inline_keyboard_markup=repl(last)[1])
                    else:
                        bot.send_text(chat_id=event.data['from']['userId'],
                                      text=repl(int(event.data['callbackData']))[0])
                        sendEnd(int(event.data['callbackData']), event)
                else:
                    bot.send_text(chat_id=event.data['from']['userId'],
                                  text=repl(int(event.data['callbackData']))[0])
                    cursor.execute("UPDATE users SET msg_count = 0 WHERE id = ?", [event.data['from']['userId']])
                    cursor.execute("UPDATE users SET last = ? WHERE id = ?", [int(event.data['callbackData']), event.data['from']['userId']])
                    bot.send_text(chat_id=event.data['from']['userId'],
                                  text="–≠—Ç–æ –∫–æ–Ω–µ—Ü –∫–≤–µ—Å—Ç–∞.\n–ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ –∑–∞–Ω–æ–≤–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É.",
                                  inline_keyboard_markup="{}".format(json.dumps(
                                      [[{"text": "üîÑ –ó–∞–Ω–æ–≤–æ", "callbackData": "repeat", "style": "primary"},
                                        {"text": "üóÇÔ∏è –ú–µ–Ω—é", "callbackData": "menu", "style": "primary"}]])))
            con.commit()
    except Exception as e:
        print(traceback.format_exc())


bot.dispatcher.add_handler(BotButtonCommandHandler(callback=answer_cb))
bot.dispatcher.add_handler(StartCommandHandler(callback=start_cb))
bot.dispatcher.add_handler(MessageHandler(callback=answer_cb))
bot.start_polling()
bot.idle()